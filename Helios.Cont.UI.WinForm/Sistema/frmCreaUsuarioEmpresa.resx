<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CaptionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA8dJREFUWEe9WM9LVFEUnkWLFi1atGgRvDcgIbUIWkQtohZBiyL6A4IWycw4ECaY
        eZ/SiEoSERYiAwaJKRJWVCRJiQ2VJCJlFDJIYZKUYaFZmEXJ6353zuj8ODPv18x88OGM99xzv7k/zjn3
        +twirNVsDfmNipBfdAV140HQL0bl9w+KuhiXfwfRFtLqzgS1czp1Ky6qtMhmDCgFPJcCTGcUEwFdNAS2
        R7aQu8IhciCyIaAZoaDfmOMHd0KxGNJE3UktspHce0NIM/ZKx/HsgTxTboe6ozSMOwT84oT8xSuM84Iw
        qIu/mE0azj6wpJV+o5lzWhyKLoxJw1ujtOKIutFDw+dHYlkZByUgTjnJ4JE4EMXbc3ZYqYnjJCcd2APS
        oBin1RERyhBvSdY6EOe4DnYp9l00mw5fZducEmeAZCUAxW6DcPfZ2+bC3HcziV9LK+bjzmfm6fLzrL09
        ipWKstptJA97T6Yv1jA/n/aOkaxsfJr6YlbvamL72WGlv76N5EmBLnJrZ7iPpOTGi1sv2b62qBuzShxV
        JbxRHsZH3pOM/Kja2cj2t0UZVXzygyyZmEYL/l7+QxLyo/VYB9vfDtVhQZrhGq1YCoGSMR+KTabBkqVY
        YqntrY8qYdYgHztO3SAJuRHrHmX72iVCH/YgynTWwIoP25+QlGzMTn72dkCIMsQYs1yDXSLcQMzqv1Ul
        bH7mmzlwZdgMlzWs2dTvv2ROjU4rm58Ly1nt+YgYiAsO2+iEyBxcYMb/vs0uKPEjN8eVQAAiM22zqIuv
        WGJ5+2IabbJmd4uaoVTW7mlda79e3a9mDiIx2+/GZ5RIMNVPDsZdhZm+hnvmm+F4Wg7mgJx858Kgys+Y
        sZYj7WZ/84D5+tGkEs35zmDMUR5uPNRmTr/6SMNbA3sTcTAJFBbJ5cZMcmOkUuVjXKq5xkyinFqa/6Gc
        O0E02GvevzxE3xLAzGM2uXFSGdTqD6p8LJd5gjNIEgcAs+EGWF6ITC4v9qStKkcekLWLFO4CrBERTr0C
        P3Ds7oQSyY2RSXklvabEAYmKRt74GUMQjgsFO6cX9+WAJspJXgL5ZhHhARu8ULTOMCJKstaBtxKvWaUw
        FItYUZKVDryVqOcItmNpiMsbyeGBtxKuY2nILC0HaeiqiPVCWfsN2X6fof3YwzkqBiEuvCOyiYa3D6v4
        WBiKqKOXrUzgrQRRnXfuhWLR8kDYBb08tEqnnh+WElFCRHOGEi9AYYEKw1W8lKuA9JWVIYoFXKrpoTOG
        21fa205iS+ClLIYfhKrE3T7z+f4Dqo6l2EGrGc8AAAAASUVORK5CYII=
</value>
  </data>
</root>
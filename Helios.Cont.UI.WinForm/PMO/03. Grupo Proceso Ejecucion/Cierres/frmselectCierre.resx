<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bg.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Cerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAWhJREFUSEvtlSFPA0EQhU8gEAgkAlGBqEQgKvkJCAQCgahAIJDIJggEAoFAIBAV
        iAokAlGBQCARCAQCUYlA4A6+N50NzYXmjt3kEpJ9ycvMvLt5r1uxV2RkZMzDFyjL8tXH9tBqMFlduOlU
        8GRm7vprfwfLnWCEac+1ELaCdkX9FXpmJjFgfzC1+fkbZ8L26PuanR/OMPfNJAaYzw2m3lD0XFzW8/BO
        MtzUUA2uoNNqMP27twreFm0xFRjWBeuUL/ABjuGJLaYC7ybBQx81v9liKvBqEnzoo4F51ZZTgE+T4A0f
        A7ZsOQWY1AZTFqmfU8W0U1tOAT61wa49uiTtXloS8BlgNIS6oZ6kUXUrncED+Oya5lvYg2P2FqRHQ8HQ
        LnsML7xeoi15P/K6C3e8P+b5uvpoKBijO5nBcDqdeAR1yvBXr6mH51D39b70aBCsD4EuBvHataOqJtBP
        pOnHwvhPYkbGP0VRfAN4ceT1Ajr/hQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="CaptionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAgdJREFUWEftlaFPAzEUxk8gEAgMCQm7GwKBQCAR/AEIBAKBQCAQCAQCgUCQIBAI
        JPJYu4QExOTkxARiAoFATCAnEAgEguSV7/XejRvb3e0YA0R/SXPp63vt19e+nudwOBwZlBQt+BXa87U5
        CTRtl0OzKEO/x8yNmfKrdBtoY/obXUPUrLiOFxaCBR8CRe/4XparZplt/A2qdMGCfE1PEDQtIT8Dpx0L
        1nlyfNtY7IwF2AWV2RG3HnBsB3GGxDQ6fB949xDS8RVpTN6KjwL9O3EbCGIeEfsq3dHB4iFPmDx/zorN
        kqJjMQ0kPi5saElM3yO4os1uFhQ1xFyIqLrs3elwtYm5GN1JFN37FXNU1rQiQ4VANuexoV3ejN0UMiVD
        w4HFV20gjsdrmAkxjwyyc8rz4sjWxJQPvxucVi5TMWUSiad6rj82Fh07NcWSj60ATTXpZmKF4HJLJpt5
        gjg7aG/SzWdY9b1C4pYtCP6HHCPdfKD8nNVnlaN9ZTGpZDF6/D4fubq49YEYXOQCxzSnqYSgZwS1U6sI
        58+i+e2JK4/NiNvnjFmfBPCbjF5tiK3QupiHg288FnuRnba4JHlRbiVlNsTNkhSTBHGhtBrm6ti5IEiG
        i2EzxC8t3hrsGD9DFmbFheJiSRcj/vZeURMb3JKh8ZEm5k9wYtL4V2K4ur5eaofD4bB43gcnQ6PkGn5G
        WAAAAABJRU5ErkJggg==
</value>
  </data>
</root>
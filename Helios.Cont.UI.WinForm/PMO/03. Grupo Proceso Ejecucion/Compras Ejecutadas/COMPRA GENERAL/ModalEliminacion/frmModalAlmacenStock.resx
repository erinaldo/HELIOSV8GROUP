<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CaptionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA/pJREFUWEe9mL9LHEEUx69IkSJFyhQpU6a0SGFpmT/Azp/gD0QUghwYUYgggigi
        2IgoIogggogEFLlGbAQVRBRFrogocqDCIYpBJu/zMnPu7c6dt576hS+3OzP73nfem515e4m4aGxs/Fxf
        X99cV1c3Jb9r8rsnv2nhgb2fEnY0NDR8sY+8LHp7e9/hQLglDk2pRGhtbe3P1tbWD9ZUeRCj1WL0OOwo
        Js+FzUzKmo0HZiMifoeMlkUiW1NT88m6KA3kWx5mDXiNlkmiVGFdFQdCZAaZkIEXpdjPSoS+WZd+kBoZ
        HDsiTU1Npru729tXhOe8mdZ1FHHWSGdnp5menjbb29vm7u7OgHQ6rW2I8z3j4Y5E6L11/wjpqA4NjLCv
        r88sLi6ak5MTdQ5OT0/NysqKmZ2dNUdHR9p2c3NjUqmU6e/v99oJUgKQtBL+w+4jkdeXGQ4PD6vhy8tL
        dfTw8KDOAG3z8/Omvb1diaCLiwvtc0As7W1tbXm2A7yS6Hy0UjQ9HeFBu7u7ufBns1mzsbFhxsfHTUtL
        i5Fc6/Xh4aH239/fq0hAdGZmZjSNjNnb29N2xmCjQLRGrBQVE9lZg1hfXzfJZFLbETI0NGQ2NzdzYonG
        9fW1Xp+dneWi5WwhDjEOrj3AcxViz5rIAEB6lpeXNTJgf38/55QU0cc6YryLFmMAzlncmUxG7xnv+sK+
        oASkkoXbHO6AYGlpSa9ZO8zORYI1wzrwvTWDg4N5C5x0j46OqtjJyUltCz8DZX/7RYo4fSOdwIlxZJas
        ATdDRPEm9fT0aGpIESgUhWJihCkisxZqVAKfGNeGANLo1gIL+KkoPCHmgMhQj0Q6QTExjuy8ABHB9rhi
        REcWMX98naAUMV1dXTqWtRJsf0ZkDGnynkXgjcXcIiYValSCtxQjGTqO/Ta9YmRSCalRf3g69KE3FjPi
        qrpIJ2DzYut3beWI4XVnTwq2BSkZqtIjQW4ii3hubk6dA05edmA2s7hiODAXFhb0WUDNExxneZUr1vmc
        8AzInTfB7X1rayuvHCgkhroHsClCDtYi9c2ECgG23KRQ9g1UYoiDj50W4+y+bHhBMZQXnFnuWCCyRCV4
        gnt4K5POLz+l0Xtghkkpsbq6mjs0XdQ4s1wb12NjYxpZn40QB6yER9hqr+QvRlLF4ejWAocmImMW5um8
        Ki8IPrBkQNF0hcnsKU1jFOFKmXhWfr9a137IgArhrXvoNShC/gq/W5fFwQeWPBQrQqWSiJQsxIEVLg/v
        hI2VSf46KZ6aQuADS2aRFANXAYPPIWkfKLhY4wAjYmxEhMX9BmcSE5F95KUggirFwYAwJdfHQt4KHN9y
        T7sQ4VXx/o9JJP4BCYqwAffTiJ8AAAAASUVORK5CYII=
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TextNombreCatalogo.FarImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAY5JREFUSEvtVKFSw0AQjUAgEAgEAoFEIBAIBAJRgUAgEBUIBIIPQOAiEM3dXiYm
        M8gKBKICGYFAIBCICgQCUYGoqEAiKuDt7aYDQ1qSCQJm8mZ27i7vdt/tXXaDBv8X1tpl59y5tfSM8QK2
        plR9IPgGkbuEvbFZ63oQesX8HZaB39Wt1WGM20fAWw02xPwMp19iLk3TBWPohLNiHtwjr8MwnPfOPwEn
        a+XOsD4CHM1ylsPQnYjRiIjaSk0HUdxVgTEcrmE7ShVCrtP7YD/7xV2lpkMdcD32FONAHDkje4iM5nQb
        Z7CH7zfK++vE+FBFZMBzDopMDmD3eTDwhGt50nUfYsf5dcobVhT5jCiKt+T6fPAMP8G2UhPUFmHw+4hI
        8Ts1Il/wqyJcVFEUreinCWaJdDrJqvx1JUS4FyEQ96kxTnZljNlUqlAE83XNnosRfiUqnpEkySIEuLhe
        OCi3DWkftpWLaDFmspZiZD8NUR5ajG0EQSV7Md998xH2rRPUAhcjTttD4FI9rcFfRhB8AOX1d2fKjD+G
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="BunifuThinButton21.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHQAAAAoCAYAAAAv1t6rAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIdSURBVHhe7dvPSxRxGMfx/hgvoS61ICiYCJWC0B4Gg2Iz
        DVHJ9te4hy4JBQYR5UE2cm1X1/9A8CJ4kS7dOnSMPXhYf2GUC3Z+8jNjq8s+elzm+/A5vE4zO8K+mZnv
        Os/c6LgZE7KDQY1hUGMY1BgGNYZBjbk2aGdXXFJ3H8rW2Gv5PvVBapll+ZtfpzbD947vf2diQebuP5bb
        3T1qL7gy6PidhOxninKc/SKn+Yr6h6jdKnKcK8lhdkVeDiXVbi1BUX/zyXzwIf2gFAVHZyfat8l30nur
        r6lfU1DErM4W5MRfVQ9C0VN9UZCBeL8eFGcmY7oH99eWoLhn8jLrpl+5snxMzFwExWoWCyBtZ3LDfroo
        93oGw6BYCmP1pO1Ibqif3SqLXjYMit83WBJrO5I7fj5fCoPupj6pO5Bb6v5aGPS3X1Z3IPcEQbUN5CYG
        NYZBjWFQYxjUGAY1hkGNCYLiB6m2kdwTBOVoiR1BUDz51jaSW/Av3CDo+wdT8ocPth1XkY3kqzAoRhgO
        M3y47TLMGE0PemFQ+Oyl+UzUURgb2n76pnkEBVMLP6YX1Q9QtNXSy41Z3UZQwAjDXpqjKC45yBTlUf9I
        o2FTUPD6hoNRTj4jjTZcZnFmXo4JLUEBl9/SqH++UOJoSpTgLQa8zfD12Vv1lQg16H+oj6UwVlDawam9
        cNXEe0Z430jrBdcGJfcwqDEMagyDGsOgpsTkH/+HaBTB15rjAAAAAElFTkSuQmCC
</value>
  </data>
</root>
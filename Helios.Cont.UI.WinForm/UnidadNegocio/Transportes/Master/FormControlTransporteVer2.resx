<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkQGEGZERndmREZ3ZkRGd2ZERndmREZ3ZkRGd2aERl5mxEalpkR
        Gd2ZERndmREZ3ZkRGd2ZERndmREZ3ZoUGyaqAAADmhEZeZoSGemaERn/mhEZ/5oRGfeaERmamBIXV5kQ
        FlCbERqqmhEZ+5oRGf+aERn/mhEZ4JkSGmQAAAAAAAAAAAAAAACZAAAFmhEZsJoRGeCcEhlImxEZt5oR
        Gf2aERr6mhEaqZ0SFkaaERnzmhEYk4AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAJoRGr6aEhnpmxAaT5oR
        Gf2aERn/mhEZ/5oRGfWYFRlImhEZ95oQGJ0AAAAAAAAAAAAAAAAAAAAAAAAAAJkQGlCaERn/mhEZ/5sS
        GZGaERm5mhEZ/5oRGf+aERmYmhEYsZoRGf+aERn9nBAaMQAAAAAAAAAAAAAAAAAAAACZEhpkmhEZ/5oR
        Gf+bERmlmREXLZoRGeCaEhnMmw8XIZoRGcWaERn/mhEZ/5gPG0MAAAAAAAAAAJkREQ+bDxkznQ8bVpoR
        Gf+aERn/mhAZjpkAAAWaERrSmhEZtgAAAACaERqzmhEZ/5oRGf2VEho6mw8ZM44cHAmaExg1mhEa+pkR
        GZmaEhZTmhQaTpwRGliZEhlxmhEZ/5oRGf+aEBlRmxMaT5sUGlmcERpNmxEYxpoRGfKeEhodAAAAAJkT
        GiiZERmZmhEa+poRGf+aERiSmhIZkJoRGf+aERn/mxAZcJoRGLGaERn/mhEZ8psQGoybEhscAAAAAAAA
        AAAAAAAAAAAAAJoQGY2aEhnMAAAAAJoSGZCaERn/mhEZ/5sRGGuAAAACmhEZ65oQGm0AAAAAAAAAAAAA
        AAAAAAAAAAAAAJ0UFA2aERrmmhEZ/JsSFzicDhwSmhEZeZsQGmGZAAAFmRIYVZoRGf+aERnPgAAABAAA
        AAAAAAAAAAAAAAAAAACbEBphmhEZ/5oRGf+aERmhAAAAAAAAAAAAAAAAAAAAAJsRGcGaERn/mhEZ/5sQ
        GEAAAAAAAAAAAAAAAAAAAAAAmREabJoRGf+aERn/mhAZqwAAAAAAAAAAAAAAAAAAAACaEhnMmhEZ/5oR
        Gf+aERhJAAAAAAAAAAAAAAAAAAAAAJsRHC6bERnsmhEZ7psSGlcAAAAAAAAAAAAAAAAAAAAAmhAZfJoR
        Gf6ZERnOmxYWFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AACBAQAAwYMAAOQnAADkJwAA4AcAAOJHAADiRwAAnnkAAMBD
        AADkbwAA5+cAAOPHAADjxwAA5+cAAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZERl7mhIZzJoSGcyaEhnMmhIZzJoSGcyaEhnMmhIZzJoS
        GcyaEhnMmhIZzJoSGcyaEhnMmxEYxp4SGh2aERdMmhIZzJoSGcyaEhnMmhIZzJoSGcyaEhnMmhIZzJoS
        GcyaEhnMmhIZzJoSGcyaEhnMmhIZzJgSGUgAAAAAAAAAAJoQGY6aERn/mhEZ/5oRGf+aERn/mhEZ/5oR
        Gf+aERn/mhEZ/5oRGf+aERn/mhEZ/5oRGf+aERn4mRQUGZoQGVGaERn/mhEZ/5oRGf+aERn/mhEZ/5oR
        Gf+aERn/mhEZ/5oRGf+aERn/mhEZ/5oRGf+aERn/mhAaTgAAAAAAAAAAlRUVDJoRGrSaERn/mhEZ/5oR
        Gf+aERn/mhEZ/5oRGf+aERn/mhEZ/5oRGf+aERn/mhEZ75sSGFScDhwSvwAABJsRGYeaERn7mhEZ/5oR
        Gf+aERn/mhEZ/5oRGf+aERn/mhEZ/5oRGf+aERn/mhEZ+5sRGYQAAAAAAAAAAAAAAAAAAAAAAAAAAJsR
        GT2aERmkmhEZ9ZoRGf+aERn/mhEZ/5oRGf+aERn/mhEZ1ZoSGHSWDx4RmQ8WI5oRGNGaERinnRQUDZwO
        HCSaEBmNmhAZ6JoRGf+aERn/mhEZ/5oRGf+aERn/mhAZ6JsQGoyZDxYjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACSEhIOmxEalpoRGf+aERn/mhAZ6JsQGEAAAAAAmhAbMJsQGZuaERn2mhEZ/5oR
        Gf+bERnnmRIagJ0UHRqAAAAEmhIZZZoRGf2aERn/mhEZ/ZkSGmSAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACiFxcLmhEZ/5oRGf+aEBmNmxIbHJoRGsiaERn/mhEZ/5oR
        Gf+aERn/mhEZ/5oRGf+aERn/mhEZ+5kRGKgAAAAAmhEZzZoRGf+aEBnKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwOHCSaERn/mhEZ/5sRGaWZAAAFmhEZwpoR
        Gf+aERn/mhEZ/5oRGf+aERn/mhEZ/5oRGf+aERn/mREZhY4cHAmZERndmhEZ/5oSGdqfICAIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACOHBwJmhIZ2poRGf+aERn/mhEZ/5kS
        GmSbExkpmhEZ95oRGf+aERn/mhEZ/5oRGf+aERn/mhEZ/5oQGdmSACQHmhEZppoRGf+aERn/mhEZ/5oR
        GaEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJkRGnaaERn/mhEZ/5oR
        Gf+aERn/mhEZ4ZsWFheaERqLmhEZ/5oRGf+aERn/mhEZ/5oRGf+aERn/mREYS5wRGjuaERn9mhEZ/5oR
        Gf+aERn/mhEZ/JsSFzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmhEZ15oR
        Gf+aERn/mhEZ/5oRGf+aERn/mhEZW5oRGVuaERn/mhEZ/5oRGf+aERn/mhEZ/5oRGf+bEhscmxAZm5oR
        Gf+aERn/mhEZ/5oRGf+aERn/mhEZmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACbEhi8mhEZ/5oRGf+aERn/mhEZ/5oRGf+ZEBhBnRQdGpoQGY2aERn5mhEZ/5oRGf+bERnnmhIZcp8g
        IAiZEhqAmhEZ/5oRGf+aERn/mhEZ/5oRGf+aEBh+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJoRGeOaERn/mhEZ/5oRGf+aERn/mhEZ/5kSGmQAAAAAAAAAAJkQGH2aERn/mhEZ/5sR
        GT0AAAAAAAAAAJoRGaaaERn/mhEZ/5oRGf+aERn/mhEZ/5oRGaEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmhEY0ZoRGf+aERn/mhEZ/5oRGf+aERn/mhEaWAAAAAAAAAAAmxEYa5oR
        Gf+aERn/mxMZKQAAAAAAAAAAmREalJoRGf+aERn/mhEZ/5oRGf+aERn/mhEalQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJgQGT6aERp3mhEad54SGh2aEBptmhEZ/5oRGf+aERn/mhEZ/5oSGdqfECAQAAAAAJkU
        FBmZERnimhEZ/5oRGf+bERm3qgAAAwAAAACbDxkzmhEZ/JoRGf+aERn/mhEZ/5oRGfObDxkzmhIaOpoR
        GneaERp3lxAYIAAAAAAAAAAAmREYqJoRGf+aERn/mhEZsJkAAAWaERlbmhEaqZoRGbaZERlnqgAAA5cM
        Fxb/AAABmhEZopoRGf+aERn/mhEZ/5oRGf+aEhpiAAAAAKIXFwubEhc4mhIan5oQGbqbERmHlRUVDJ4P
        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
</value>
  </data>
</root>